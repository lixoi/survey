// Code generated by go-swagger; DO NOT EDIT.

package i_c_h_survey

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// ICHSurveyStartSurveyHandlerFunc turns a function with the right signature into a i c h survey start survey handler
type ICHSurveyStartSurveyHandlerFunc func(ICHSurveyStartSurveyParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ICHSurveyStartSurveyHandlerFunc) Handle(params ICHSurveyStartSurveyParams) middleware.Responder {
	return fn(params)
}

// ICHSurveyStartSurveyHandler interface for that can handle valid i c h survey start survey params
type ICHSurveyStartSurveyHandler interface {
	Handle(ICHSurveyStartSurveyParams) middleware.Responder
}

// NewICHSurveyStartSurvey creates a new http.Handler for the i c h survey start survey operation
func NewICHSurveyStartSurvey(ctx *middleware.Context, handler ICHSurveyStartSurveyHandler) *ICHSurveyStartSurvey {
	return &ICHSurveyStartSurvey{Context: ctx, Handler: handler}
}

/*
	ICHSurveyStartSurvey swagger:route GET /v1/start_survey/{userId} ICHSurvey iCHSurveyStartSurvey

ICHSurveyStartSurvey i c h survey start survey API
*/
type ICHSurveyStartSurvey struct {
	Context *middleware.Context
	Handler ICHSurveyStartSurveyHandler
}

func (o *ICHSurveyStartSurvey) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewICHSurveyStartSurveyParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
